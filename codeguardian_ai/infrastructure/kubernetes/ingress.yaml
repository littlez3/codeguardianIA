apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: codeguardian-ai-ingress
  namespace: codeguardian-ai
  labels:
    app: codeguardian-ai
  annotations:
    # NGINX Ingress Controller annotations
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-ancestors 'self';" always;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/rate-limit-connections: "10"
    
    # Request size limits
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/client-max-body-size: "10m"
    
    # Timeouts
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    
    # Load balancing
    nginx.ingress.kubernetes.io/load-balance: "round_robin"
    nginx.ingress.kubernetes.io/upstream-hash-by: "$remote_addr"
    
    # CORS (if needed)
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://codeguardian.ai"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-API-Key"
    nginx.ingress.kubernetes.io/cors-expose-headers: "Content-Length,Content-Range"
    nginx.ingress.kubernetes.io/cors-max-age: "86400"
    
    # Monitoring
    nginx.ingress.kubernetes.io/enable-access-log: "true"
    nginx.ingress.kubernetes.io/access-log-path: "/var/log/nginx/codeguardian-access.log"
    
    # Certificate management (cert-manager)
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    cert-manager.io/acme-challenge-type: "http01"
    
spec:
  tls:
  - hosts:
    - api.codeguardian.ai
    - codeguardian.ai
    secretName: codeguardian-tls
  rules:
  - host: api.codeguardian.ai
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: codeguardian-ai
            port:
              number: 80
  - host: codeguardian.ai
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: codeguardian-ai
            port:
              number: 80
      - path: /
        pathType: Prefix
        backend:
          service:
            name: codeguardian-frontend  # If you have a frontend service
            port:
              number: 80

---
# Separate ingress for admin endpoints with stricter security
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: codeguardian-ai-admin-ingress
  namespace: codeguardian-ai
  labels:
    app: codeguardian-ai
    tier: admin
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # Stricter rate limiting for admin endpoints
    nginx.ingress.kubernetes.io/rate-limit: "10"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/rate-limit-connections: "2"
    
    # IP whitelist for admin access (replace with actual admin IPs)
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
    
    # Additional security headers for admin
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options "DENY" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "no-referrer" always;
      add_header Content-Security-Policy "default-src 'none'; script-src 'self'; style-src 'self'; img-src 'self'; font-src 'self'; connect-src 'self'; frame-ancestors 'none';" always;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
      add_header Cache-Control "no-cache, no-store, must-revalidate" always;
      add_header Pragma "no-cache" always;
      add_header Expires "0" always;
    
    # Certificate management
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    
spec:
  tls:
  - hosts:
    - admin.codeguardian.ai
    secretName: codeguardian-admin-tls
  rules:
  - host: admin.codeguardian.ai
    http:
      paths:
      - path: /api/v1/admin
        pathType: Prefix
        backend:
          service:
            name: codeguardian-ai
            port:
              number: 80

---
# Monitoring ingress for Prometheus metrics
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: codeguardian-ai-metrics-ingress
  namespace: codeguardian-ai
  labels:
    app: codeguardian-ai
    tier: monitoring
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    
    # Restrict access to monitoring systems
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
    
    # Basic auth for metrics endpoint
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    nginx.ingress.kubernetes.io/auth-realm: "CodeGuardian AI Metrics"
    
spec:
  tls:
  - hosts:
    - metrics.codeguardian.ai
    secretName: codeguardian-metrics-tls
  rules:
  - host: metrics.codeguardian.ai
    http:
      paths:
      - path: /metrics
        pathType: Prefix
        backend:
          service:
            name: codeguardian-ai
            port:
              number: 8080

